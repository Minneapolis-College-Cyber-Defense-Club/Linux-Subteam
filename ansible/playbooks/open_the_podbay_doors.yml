---
- name: open the pod bay doors Hal
  gather_facts: true
  hosts: all:!discovery
  become: true
  become_method: su
  vars:
    ansible_user: "{{ initial_user }}"
    ansible_password: "{{ initial_password }}"
    ansible_become_user: root
    ansible_become_password: "{{ initial_password }}"
  tasks:
    - name: fix repos CentOS6 (if appropriate)
      ansible.builtin.include_role:
        name: fix_repos
      when: iscentos6 is defined or isdebian8 is defined

    - name: shields up
      ansible.builtin.include_role:
        name: shields_up
      vars:
        battle_station: "{{ item }}"
      loop:
        - suss_users
        - file_archive
        - crons
        - dns
        - hosts

    # CentOS6 requires a package to work properly
    - name: install libselinux-python
      ansible.builtin.package:
        name: libselinux-python
        state: present
      when: iscentos6 is defined

    - name: user_setup
      ansible.builtin.include_role:
        name: user_setup
      vars:
        orcman: root
        add_key: true

    - name: user_setup
      ansible.builtin.include_role:
        name: user_setup
      vars:
        orcman: dave2001
        add_key: true

    - name: do_sudo
      ansible.builtin.include_role:
        name: do_sudo 
      vars:
        orcman: dave2001

    # before building the depot check ownership
    - name: validating depot existence
      ansible.builtin.stat:
        path: "{{ depot_path }}"
      register: depot_exists

    - name: do_depot
      ansible.builtin.include_role:
        name: do_depot
      vars:
        make_depot: true
      when: depot_exists.stat.isdir is undefined

    - name: do_depot
      ansible.builtin.include_role:
        name: do_depot
      vars:
        do_chown: true
        orcman: dave2001

    - name: make_banner
      ansible.builtin.include_role:
        name: make_banner

    - name: fix_sshd
      ansible.builtin.include_role:
        name: fix_sshd

    - name: do_firewall
      ansible.builtin.include_role:
        name: do_firewall

    - name: clean up non-standard admin account (if present)
      ansible.builtin.user:
        name: "{{ initial_user }}"
        password_lock: true
        shell: /usr/sbin/nologin
      when: non_root_admin is defined


