#!/bin/bash

# Funci칩n para verificar si un paquete est치 instalado
paquete_instalado() {  
    dpkg -l "$1" | grep -q '^ii'  
}

# Instalar paquetes necesarios
paquetes=("net-tools")
for paquete in "${paquetes[@]}"; do 
    if ! paquete_instalado "$paquete"; then  
        sudo apt-get install -y "$paquete"  
    fi  
done

# SSH Port y PID File
SSH_PORT=22
PID_FILE="/tmp/pidssh"

# Function to check for SSH connections
check_ssh_connections() {
    > "$PID_FILE"
    local connections=$(sudo netstat -tnp | grep ':'"$SSH_PORT" | grep 'ESTABLISHED')
    if [ ! -z "$connections" ]; then
        echo ""
	echo ""
	echo ""
	echo ""
        echo "**********   ALERT : Active SSH connection detected.   ***********"
        echo ""
        local count=1
        echo "$connections" | while IFS= read -r line; do
            local ip=$(echo "$line" | awk '{print $5}' | cut -d':' -f1)
            local pid=$(echo "$line" | awk '{print $7}' | grep -o '[0-9]*')
            local user=$(sudo ps -o user= -p "$pid" 2>/dev/null)
            echo "$count) SSH User: $user, IP: $ip, PID: $pid, Connection: $user@$ip"
            echo "$pid" >> "$PID_FILE"
            ((count++))
        done
        ask_to_kill_connection
    else
 #       echo ""
#   echo ""        
    echo "No active SSH connections at this time."
    echo ""
#        echo ""
        exit_after_delay
    fi
}

# Function to ask the user if they want to kill a connection
ask_to_kill_connection() {
    echo ""
    echo ""
    echo ""
    echo "*** Enter the number of the connection you want to kill  or  A  to kill ALL ***"
    echo ""
    read -t 10 -r selection

    if [ -z "$selection" ]; then
        echo "No selection made or time out. Exiting..."
        echo ""
        exit 0
    elif [ "$selection" = "A" ] || [ "$selection" = "a" ]; then
        kill_all_connections
    elif [[ "$selection" =~ ^[0-9]+$ ]]; then
        handle_connection_selection "$selection"
    else
        echo "Invalid selection. Exiting..."
        exit 1
    fi
}

# Function to handle the user's selection
handle_connection_selection() {
    local selection=$1
    mapfile -t pids < "$PID_FILE"

    if [ "$selection" -gt 0 ] && [ "$selection" -le ${#pids[@]} ]; then
        local selected_pid=${pids[$selection-1]}
        sudo kill "$selected_pid"
        echo "Executed 'sudo kill' on PID $selected_pid."
    else
        echo "Invalid selection."
    fi
}

# Funci칩n para matar todas las conexiones SSH
kill_all_connections() {
    echo "Terminando todas las conexiones SSH..."
    while read -r pid; do
        sudo kill "$pid"
        echo "Conexi칩n terminada para PID $pid."
    done < "$PID_FILE"
}

# Function to exit script after a delay
exit_after_delay() {
    echo "    **** Checking again in 4 seconds...    ****"
    echo ""
    echo ""
    echo ""
    echo ""
    sleep 3
    exit 0
}

# Call the check function once
check_ssh_connections
