#!/bin/zsh
echo ""

# Función para verificar si un paquete está instalado
paquetes=("bind-tools" "jq" "systemd" "iproute2" "bat" "inetutils" )

paquete_instalado() {  
    pacman -Qi "$1" &> /dev/null
}

for paquete in "${paquetes[@]}"; do 
    if ! paquete_instalado "$paquete"; then  
        sudo pacman -S --noconfirm "$paquete"
    fi  
done

echo "***************IP local ********"

#hostname -I | awk '{print $1 " | " $2}'
 ip -4 address show dev wlp0s20f3 | grep inet | awk '{print $2}' | cut -d/ -f1

echo ""
echo "IP publica localmente encontrada"
dig +short myip.opendns.com @resolver1.opendns.com
echo ""

# Ejecutar hostnamectl y guardar la salida en un archivo temporal
tmpfile=$(mktemp)
hostnamectl | grep -E 'Virtualization|Operating System|Hardware Vendor' > "$tmpfile"

# Eliminar las líneas no deseadas del archivo temporal
#sed -i '/Machine ID:/d; /Boot ID:/d; /Firmware Version:/d; /Firmware Date:/d; /Firmware Age:/d' "$tmpfile"

# Mostrar el contenido del archivo modificado
bat -l rb "$tmpfile"
rm "$tmpfile"

echo ""

# Función para comprobar la conexión a Internet
check_internet_connection() {
    echo ""
    curl ifconfig.me
    local host="google.com"

    ping -c 1 "$host" > /dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo " <== tu IP.  La conexión a Internet está ACTIVA."
    else
        echo "No se puede acceder a Internet."
    fi
}

echo "¿Deseas verificar la conexión? (s para sí, enter para continuar)"
read response

if [[ "$response" == "s" ]]; then
    check_internet_connection
    tmpfile=$(mktemp)
    curl -s ipinfo.io | jq 'del(.loc, .org, .readme)' > "$tmpfile"
    bat -l rb "$tmpfile"
    # rm "$tmpfile"
fi

