#!/bin/bash


# Lista de paquetes a instalar

paquetes=("lsof" "net-tools" "nmap")


# Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
paquete_instalado_apt() {  
    dpkg -l "$1" | grep -q '^ii'  
}

# Función para verificar si un paquete está instalado (CentOS/RHEL)
paquete_instalado_yum() {
    yum list installed "$1" &> /dev/null
}

# Función para verificar si un paquete está instalado (Fedora)
paquete_instalado_dnf() {
    dnf list installed "$1" &> /dev/null
}

# Función para verificar si un paquete está instalado (Arch Linux)
paquete_instalado_pacman() {
    pacman -Qi "$1" &> /dev/null
}

# Detectar el sistema operativo
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
fi

# Instalar paquetes basados en el sistema operativo
for paquete in "${paquetes[@]}"; do
    case $OS in
        "debian"|"ubuntu"|"kali")
            if ! paquete_instalado_apt "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo apt-get install -y "$paquete"
            fi
            ;;
        "centos"|"rhel")
            if ! paquete_instalado_yum "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo yum install -y "$paquete"
            fi
            ;;
        "fedora")
            if ! paquete_instalado_dnf "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo dnf install -y "$paquete"
            fi
            ;;
        "arch")
            if ! paquete_instalado_pacman "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo pacman -S --noconfirm "$paquete"
            fi
            ;;
        *)
            ;;
    esac
done



# Function to ask and execute lsof
ask_and_execute_lsof() {
    read -p "Execute lsof? [Enter/c]: " response
    if [[ $response != "c" ]]; then
        sudo lsof -i -P -n
    fi
}

# Function to ask and execute netstat
ask_and_execute_netstat() {
    echo ""
    echo ""
    read -p "Execute netstat? [Enter/c]: " response
    if [[ $response != "c" ]]; then
        netstat -tulpn
    fi
}

# Function to ask and execute nmap on localhost
ask_and_execute_nmap() {
    echo ""
    echo ""
    read -p "Execute nmap localhost? [Enter/c]: " response
    if [[ $response != "c" ]]; then
        sudo nmap -T4 -p- --min-rate 1000 localhost
    fi
}

# Function to ask and execute ps
ask_and_execute_ps() {
    echo ""
    echo ""
    read -p "Execute processes? [Enter/c]: " response
    if [[ $response != "c" ]]; then
        ps -eo user,comm,pid
    fi
}

# Calls to the functions
ask_and_execute_lsof
ask_and_execute_netstat
ask_and_execute_nmap
ask_and_execute_ps








